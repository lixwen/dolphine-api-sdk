/*
 * DolphinSchedulerApiDocsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package m6712345.m30.m168.m172.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Property type.
 */
public class Property {
    private DirectEnum direct;
    private String prop;
    private Type2Enum type;
    private String value;

    /**
     * Default constructor.
     */
    public Property() {
    }

    /**
     * Initialization constructor.
     * @param  direct  DirectEnum value for direct.
     * @param  prop  String value for prop.
     * @param  type  Type2Enum value for type.
     * @param  value  String value for value.
     */
    public Property(
            DirectEnum direct,
            String prop,
            Type2Enum type,
            String value) {
        this.direct = direct;
        this.prop = prop;
        this.type = type;
        this.value = value;
    }

    /**
     * Getter for Direct.
     * @return Returns the DirectEnum
     */
    @JsonGetter("direct")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DirectEnum getDirect() {
        return direct;
    }

    /**
     * Setter for Direct.
     * @param direct Value for DirectEnum
     */
    @JsonSetter("direct")
    public void setDirect(DirectEnum direct) {
        this.direct = direct;
    }

    /**
     * Getter for Prop.
     * @return Returns the String
     */
    @JsonGetter("prop")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getProp() {
        return prop;
    }

    /**
     * Setter for Prop.
     * @param prop Value for String
     */
    @JsonSetter("prop")
    public void setProp(String prop) {
        this.prop = prop;
    }

    /**
     * Getter for Type.
     * @return Returns the Type2Enum
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Type2Enum getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for Type2Enum
     */
    @JsonSetter("type")
    public void setType(Type2Enum type) {
        this.type = type;
    }

    /**
     * Getter for Value.
     * @return Returns the String
     */
    @JsonGetter("value")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getValue() {
        return value;
    }

    /**
     * Setter for Value.
     * @param value Value for String
     */
    @JsonSetter("value")
    public void setValue(String value) {
        this.value = value;
    }

    /**
     * Converts this Property into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Property [" + "direct=" + direct + ", prop=" + prop + ", type=" + type + ", value="
                + value + "]";
    }

    /**
     * Builds a new {@link Property.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Property.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .direct(getDirect())
                .prop(getProp())
                .type(getType())
                .value(getValue());
        return builder;
    }

    /**
     * Class to build instances of {@link Property}.
     */
    public static class Builder {
        private DirectEnum direct;
        private String prop;
        private Type2Enum type;
        private String value;



        /**
         * Setter for direct.
         * @param  direct  DirectEnum value for direct.
         * @return Builder
         */
        public Builder direct(DirectEnum direct) {
            this.direct = direct;
            return this;
        }

        /**
         * Setter for prop.
         * @param  prop  String value for prop.
         * @return Builder
         */
        public Builder prop(String prop) {
            this.prop = prop;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  Type2Enum value for type.
         * @return Builder
         */
        public Builder type(Type2Enum type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for value.
         * @param  value  String value for value.
         * @return Builder
         */
        public Builder value(String value) {
            this.value = value;
            return this;
        }

        /**
         * Builds a new {@link Property} object using the set fields.
         * @return {@link Property}
         */
        public Property build() {
            return new Property(direct, prop, type, value);
        }
    }
}
