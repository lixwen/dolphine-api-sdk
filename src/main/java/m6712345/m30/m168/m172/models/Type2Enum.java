/*
 * DolphinSchedulerApiDocsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package m6712345.m30.m168.m172.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * Type2Enum to be used.
 */
public enum Type2Enum {
    VARCHAR,

    INTEGER,

    LONG,

    FLOAT,

    DOUBLE,

    DATE,

    TIME,

    TIMESTAMP,

    BOOLEAN,

    LIST;


    private static TreeMap<String, Type2Enum> valueMap = new TreeMap<>();
    private String value;

    static {
        VARCHAR.value = "VARCHAR";
        INTEGER.value = "INTEGER";
        LONG.value = "LONG";
        FLOAT.value = "FLOAT";
        DOUBLE.value = "DOUBLE";
        DATE.value = "DATE";
        TIME.value = "TIME";
        TIMESTAMP.value = "TIMESTAMP";
        BOOLEAN.value = "BOOLEAN";
        LIST.value = "LIST";

        valueMap.put("VARCHAR", VARCHAR);
        valueMap.put("INTEGER", INTEGER);
        valueMap.put("LONG", LONG);
        valueMap.put("FLOAT", FLOAT);
        valueMap.put("DOUBLE", DOUBLE);
        valueMap.put("DATE", DATE);
        valueMap.put("TIME", TIME);
        valueMap.put("TIMESTAMP", TIMESTAMP);
        valueMap.put("BOOLEAN", BOOLEAN);
        valueMap.put("LIST", LIST);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static Type2Enum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of Type2Enum values to list of string values.
     * @param toConvert The list of Type2Enum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<Type2Enum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (Type2Enum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 