/*
 * DolphinSchedulerApiDocsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package m6712345.m30.m168.m172.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Map;
import m6712345.m30.m168.m172.DateTimeHelper;

/**
 * This is a model class for TaskDefinition type.
 */
public class TaskDefinition {
    private Long code;
    private LocalDateTime createTime;
    private Integer delayTime;
    private String dependence;
    private String description;
    private Long environmentCode;
    private Integer failRetryInterval;
    private Integer failRetryTimes;
    private FlagEnum flag;
    private Integer id;
    private String modifyBy;
    private String name;
    private Long projectCode;
    private String projectName;
    private String resourceIds;
    private Integer taskGroupId;
    private Integer taskGroupPriority;
    private List<Property> taskParamList;
    private Map<String, String> taskParamMap;
    private String taskParams;
    private TaskPriorityEnum taskPriority;
    private String taskType;
    private Integer timeout;
    private TimeoutFlagEnum timeoutFlag;
    private TimeoutNotifyStrategyEnum timeoutNotifyStrategy;
    private LocalDateTime updateTime;
    private Integer userId;
    private String userName;
    private Integer version;
    private String workerGroup;

    /**
     * Default constructor.
     */
    public TaskDefinition() {
    }

    /**
     * Initialization constructor.
     * @param  code  Long value for code.
     * @param  createTime  LocalDateTime value for createTime.
     * @param  delayTime  Integer value for delayTime.
     * @param  dependence  String value for dependence.
     * @param  description  String value for description.
     * @param  environmentCode  Long value for environmentCode.
     * @param  failRetryInterval  Integer value for failRetryInterval.
     * @param  failRetryTimes  Integer value for failRetryTimes.
     * @param  flag  FlagEnum value for flag.
     * @param  id  Integer value for id.
     * @param  modifyBy  String value for modifyBy.
     * @param  name  String value for name.
     * @param  projectCode  Long value for projectCode.
     * @param  projectName  String value for projectName.
     * @param  resourceIds  String value for resourceIds.
     * @param  taskGroupId  Integer value for taskGroupId.
     * @param  taskGroupPriority  Integer value for taskGroupPriority.
     * @param  taskParamList  List of Property value for taskParamList.
     * @param  taskParamMap  Map of String, value for taskParamMap.
     * @param  taskParams  String value for taskParams.
     * @param  taskPriority  TaskPriorityEnum value for taskPriority.
     * @param  taskType  String value for taskType.
     * @param  timeout  Integer value for timeout.
     * @param  timeoutFlag  TimeoutFlagEnum value for timeoutFlag.
     * @param  timeoutNotifyStrategy  TimeoutNotifyStrategyEnum value for timeoutNotifyStrategy.
     * @param  updateTime  LocalDateTime value for updateTime.
     * @param  userId  Integer value for userId.
     * @param  userName  String value for userName.
     * @param  version  Integer value for version.
     * @param  workerGroup  String value for workerGroup.
     */
    public TaskDefinition(
            Long code,
            LocalDateTime createTime,
            Integer delayTime,
            String dependence,
            String description,
            Long environmentCode,
            Integer failRetryInterval,
            Integer failRetryTimes,
            FlagEnum flag,
            Integer id,
            String modifyBy,
            String name,
            Long projectCode,
            String projectName,
            String resourceIds,
            Integer taskGroupId,
            Integer taskGroupPriority,
            List<Property> taskParamList,
            Map<String, String> taskParamMap,
            String taskParams,
            TaskPriorityEnum taskPriority,
            String taskType,
            Integer timeout,
            TimeoutFlagEnum timeoutFlag,
            TimeoutNotifyStrategyEnum timeoutNotifyStrategy,
            LocalDateTime updateTime,
            Integer userId,
            String userName,
            Integer version,
            String workerGroup) {
        this.code = code;
        this.createTime = createTime;
        this.delayTime = delayTime;
        this.dependence = dependence;
        this.description = description;
        this.environmentCode = environmentCode;
        this.failRetryInterval = failRetryInterval;
        this.failRetryTimes = failRetryTimes;
        this.flag = flag;
        this.id = id;
        this.modifyBy = modifyBy;
        this.name = name;
        this.projectCode = projectCode;
        this.projectName = projectName;
        this.resourceIds = resourceIds;
        this.taskGroupId = taskGroupId;
        this.taskGroupPriority = taskGroupPriority;
        this.taskParamList = taskParamList;
        this.taskParamMap = taskParamMap;
        this.taskParams = taskParams;
        this.taskPriority = taskPriority;
        this.taskType = taskType;
        this.timeout = timeout;
        this.timeoutFlag = timeoutFlag;
        this.timeoutNotifyStrategy = timeoutNotifyStrategy;
        this.updateTime = updateTime;
        this.userId = userId;
        this.userName = userName;
        this.version = version;
        this.workerGroup = workerGroup;
    }

    /**
     * Getter for Code.
     * @return Returns the Long
     */
    @JsonGetter("code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * @param code Value for Long
     */
    @JsonSetter("code")
    public void setCode(Long code) {
        this.code = code;
    }

    /**
     * Getter for CreateTime.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("createTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreateTime() {
        return createTime;
    }

    /**
     * Setter for CreateTime.
     * @param createTime Value for LocalDateTime
     */
    @JsonSetter("createTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreateTime(LocalDateTime createTime) {
        this.createTime = createTime;
    }

    /**
     * Getter for DelayTime.
     * @return Returns the Integer
     */
    @JsonGetter("delayTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getDelayTime() {
        return delayTime;
    }

    /**
     * Setter for DelayTime.
     * @param delayTime Value for Integer
     */
    @JsonSetter("delayTime")
    public void setDelayTime(Integer delayTime) {
        this.delayTime = delayTime;
    }

    /**
     * Getter for Dependence.
     * @return Returns the String
     */
    @JsonGetter("dependence")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDependence() {
        return dependence;
    }

    /**
     * Setter for Dependence.
     * @param dependence Value for String
     */
    @JsonSetter("dependence")
    public void setDependence(String dependence) {
        this.dependence = dependence;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for EnvironmentCode.
     * @return Returns the Long
     */
    @JsonGetter("environmentCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getEnvironmentCode() {
        return environmentCode;
    }

    /**
     * Setter for EnvironmentCode.
     * @param environmentCode Value for Long
     */
    @JsonSetter("environmentCode")
    public void setEnvironmentCode(Long environmentCode) {
        this.environmentCode = environmentCode;
    }

    /**
     * Getter for FailRetryInterval.
     * @return Returns the Integer
     */
    @JsonGetter("failRetryInterval")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getFailRetryInterval() {
        return failRetryInterval;
    }

    /**
     * Setter for FailRetryInterval.
     * @param failRetryInterval Value for Integer
     */
    @JsonSetter("failRetryInterval")
    public void setFailRetryInterval(Integer failRetryInterval) {
        this.failRetryInterval = failRetryInterval;
    }

    /**
     * Getter for FailRetryTimes.
     * @return Returns the Integer
     */
    @JsonGetter("failRetryTimes")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getFailRetryTimes() {
        return failRetryTimes;
    }

    /**
     * Setter for FailRetryTimes.
     * @param failRetryTimes Value for Integer
     */
    @JsonSetter("failRetryTimes")
    public void setFailRetryTimes(Integer failRetryTimes) {
        this.failRetryTimes = failRetryTimes;
    }

    /**
     * Getter for Flag.
     * @return Returns the FlagEnum
     */
    @JsonGetter("flag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public FlagEnum getFlag() {
        return flag;
    }

    /**
     * Setter for Flag.
     * @param flag Value for FlagEnum
     */
    @JsonSetter("flag")
    public void setFlag(FlagEnum flag) {
        this.flag = flag;
    }

    /**
     * Getter for Id.
     * @return Returns the Integer
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for Integer
     */
    @JsonSetter("id")
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for ModifyBy.
     * @return Returns the String
     */
    @JsonGetter("modifyBy")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getModifyBy() {
        return modifyBy;
    }

    /**
     * Setter for ModifyBy.
     * @param modifyBy Value for String
     */
    @JsonSetter("modifyBy")
    public void setModifyBy(String modifyBy) {
        this.modifyBy = modifyBy;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for ProjectCode.
     * @return Returns the Long
     */
    @JsonGetter("projectCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getProjectCode() {
        return projectCode;
    }

    /**
     * Setter for ProjectCode.
     * @param projectCode Value for Long
     */
    @JsonSetter("projectCode")
    public void setProjectCode(Long projectCode) {
        this.projectCode = projectCode;
    }

    /**
     * Getter for ProjectName.
     * @return Returns the String
     */
    @JsonGetter("projectName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getProjectName() {
        return projectName;
    }

    /**
     * Setter for ProjectName.
     * @param projectName Value for String
     */
    @JsonSetter("projectName")
    public void setProjectName(String projectName) {
        this.projectName = projectName;
    }

    /**
     * Getter for ResourceIds.
     * @return Returns the String
     */
    @JsonGetter("resourceIds")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getResourceIds() {
        return resourceIds;
    }

    /**
     * Setter for ResourceIds.
     * @param resourceIds Value for String
     */
    @JsonSetter("resourceIds")
    public void setResourceIds(String resourceIds) {
        this.resourceIds = resourceIds;
    }

    /**
     * Getter for TaskGroupId.
     * @return Returns the Integer
     */
    @JsonGetter("taskGroupId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTaskGroupId() {
        return taskGroupId;
    }

    /**
     * Setter for TaskGroupId.
     * @param taskGroupId Value for Integer
     */
    @JsonSetter("taskGroupId")
    public void setTaskGroupId(Integer taskGroupId) {
        this.taskGroupId = taskGroupId;
    }

    /**
     * Getter for TaskGroupPriority.
     * @return Returns the Integer
     */
    @JsonGetter("taskGroupPriority")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTaskGroupPriority() {
        return taskGroupPriority;
    }

    /**
     * Setter for TaskGroupPriority.
     * @param taskGroupPriority Value for Integer
     */
    @JsonSetter("taskGroupPriority")
    public void setTaskGroupPriority(Integer taskGroupPriority) {
        this.taskGroupPriority = taskGroupPriority;
    }

    /**
     * Getter for TaskParamList.
     * @return Returns the List of Property
     */
    @JsonGetter("taskParamList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Property> getTaskParamList() {
        return taskParamList;
    }

    /**
     * Setter for TaskParamList.
     * @param taskParamList Value for List of Property
     */
    @JsonSetter("taskParamList")
    public void setTaskParamList(List<Property> taskParamList) {
        this.taskParamList = taskParamList;
    }

    /**
     * Getter for TaskParamMap.
     * @return Returns the Map of String, String
     */
    @JsonGetter("taskParamMap")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, String> getTaskParamMap() {
        return taskParamMap;
    }

    /**
     * Setter for TaskParamMap.
     * @param taskParamMap Value for Map of String, String
     */
    @JsonSetter("taskParamMap")
    public void setTaskParamMap(Map<String, String> taskParamMap) {
        this.taskParamMap = taskParamMap;
    }

    /**
     * Getter for TaskParams.
     * @return Returns the String
     */
    @JsonGetter("taskParams")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTaskParams() {
        return taskParams;
    }

    /**
     * Setter for TaskParams.
     * @param taskParams Value for String
     */
    @JsonSetter("taskParams")
    public void setTaskParams(String taskParams) {
        this.taskParams = taskParams;
    }

    /**
     * Getter for TaskPriority.
     * @return Returns the TaskPriorityEnum
     */
    @JsonGetter("taskPriority")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TaskPriorityEnum getTaskPriority() {
        return taskPriority;
    }

    /**
     * Setter for TaskPriority.
     * @param taskPriority Value for TaskPriorityEnum
     */
    @JsonSetter("taskPriority")
    public void setTaskPriority(TaskPriorityEnum taskPriority) {
        this.taskPriority = taskPriority;
    }

    /**
     * Getter for TaskType.
     * @return Returns the String
     */
    @JsonGetter("taskType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTaskType() {
        return taskType;
    }

    /**
     * Setter for TaskType.
     * @param taskType Value for String
     */
    @JsonSetter("taskType")
    public void setTaskType(String taskType) {
        this.taskType = taskType;
    }

    /**
     * Getter for Timeout.
     * @return Returns the Integer
     */
    @JsonGetter("timeout")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTimeout() {
        return timeout;
    }

    /**
     * Setter for Timeout.
     * @param timeout Value for Integer
     */
    @JsonSetter("timeout")
    public void setTimeout(Integer timeout) {
        this.timeout = timeout;
    }

    /**
     * Getter for TimeoutFlag.
     * @return Returns the TimeoutFlagEnum
     */
    @JsonGetter("timeoutFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TimeoutFlagEnum getTimeoutFlag() {
        return timeoutFlag;
    }

    /**
     * Setter for TimeoutFlag.
     * @param timeoutFlag Value for TimeoutFlagEnum
     */
    @JsonSetter("timeoutFlag")
    public void setTimeoutFlag(TimeoutFlagEnum timeoutFlag) {
        this.timeoutFlag = timeoutFlag;
    }

    /**
     * Getter for TimeoutNotifyStrategy.
     * @return Returns the TimeoutNotifyStrategyEnum
     */
    @JsonGetter("timeoutNotifyStrategy")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TimeoutNotifyStrategyEnum getTimeoutNotifyStrategy() {
        return timeoutNotifyStrategy;
    }

    /**
     * Setter for TimeoutNotifyStrategy.
     * @param timeoutNotifyStrategy Value for TimeoutNotifyStrategyEnum
     */
    @JsonSetter("timeoutNotifyStrategy")
    public void setTimeoutNotifyStrategy(TimeoutNotifyStrategyEnum timeoutNotifyStrategy) {
        this.timeoutNotifyStrategy = timeoutNotifyStrategy;
    }

    /**
     * Getter for UpdateTime.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updateTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdateTime() {
        return updateTime;
    }

    /**
     * Setter for UpdateTime.
     * @param updateTime Value for LocalDateTime
     */
    @JsonSetter("updateTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdateTime(LocalDateTime updateTime) {
        this.updateTime = updateTime;
    }

    /**
     * Getter for UserId.
     * @return Returns the Integer
     */
    @JsonGetter("userId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getUserId() {
        return userId;
    }

    /**
     * Setter for UserId.
     * @param userId Value for Integer
     */
    @JsonSetter("userId")
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    /**
     * Getter for UserName.
     * @return Returns the String
     */
    @JsonGetter("userName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUserName() {
        return userName;
    }

    /**
     * Setter for UserName.
     * @param userName Value for String
     */
    @JsonSetter("userName")
    public void setUserName(String userName) {
        this.userName = userName;
    }

    /**
     * Getter for Version.
     * @return Returns the Integer
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * @param version Value for Integer
     */
    @JsonSetter("version")
    public void setVersion(Integer version) {
        this.version = version;
    }

    /**
     * Getter for WorkerGroup.
     * @return Returns the String
     */
    @JsonGetter("workerGroup")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getWorkerGroup() {
        return workerGroup;
    }

    /**
     * Setter for WorkerGroup.
     * @param workerGroup Value for String
     */
    @JsonSetter("workerGroup")
    public void setWorkerGroup(String workerGroup) {
        this.workerGroup = workerGroup;
    }

    /**
     * Converts this TaskDefinition into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TaskDefinition [" + "code=" + code + ", createTime=" + createTime + ", delayTime="
                + delayTime + ", dependence=" + dependence + ", description=" + description
                + ", environmentCode=" + environmentCode + ", failRetryInterval="
                + failRetryInterval + ", failRetryTimes=" + failRetryTimes + ", flag=" + flag
                + ", id=" + id + ", modifyBy=" + modifyBy + ", name=" + name + ", projectCode="
                + projectCode + ", projectName=" + projectName + ", resourceIds=" + resourceIds
                + ", taskGroupId=" + taskGroupId + ", taskGroupPriority=" + taskGroupPriority
                + ", taskParamList=" + taskParamList + ", taskParamMap=" + taskParamMap
                + ", taskParams=" + taskParams + ", taskPriority=" + taskPriority + ", taskType="
                + taskType + ", timeout=" + timeout + ", timeoutFlag=" + timeoutFlag
                + ", timeoutNotifyStrategy=" + timeoutNotifyStrategy + ", updateTime=" + updateTime
                + ", userId=" + userId + ", userName=" + userName + ", version=" + version
                + ", workerGroup=" + workerGroup + "]";
    }

    /**
     * Builds a new {@link TaskDefinition.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link TaskDefinition.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .code(getCode())
                .createTime(getCreateTime())
                .delayTime(getDelayTime())
                .dependence(getDependence())
                .description(getDescription())
                .environmentCode(getEnvironmentCode())
                .failRetryInterval(getFailRetryInterval())
                .failRetryTimes(getFailRetryTimes())
                .flag(getFlag())
                .id(getId())
                .modifyBy(getModifyBy())
                .name(getName())
                .projectCode(getProjectCode())
                .projectName(getProjectName())
                .resourceIds(getResourceIds())
                .taskGroupId(getTaskGroupId())
                .taskGroupPriority(getTaskGroupPriority())
                .taskParamList(getTaskParamList())
                .taskParamMap(getTaskParamMap())
                .taskParams(getTaskParams())
                .taskPriority(getTaskPriority())
                .taskType(getTaskType())
                .timeout(getTimeout())
                .timeoutFlag(getTimeoutFlag())
                .timeoutNotifyStrategy(getTimeoutNotifyStrategy())
                .updateTime(getUpdateTime())
                .userId(getUserId())
                .userName(getUserName())
                .version(getVersion())
                .workerGroup(getWorkerGroup());
        return builder;
    }

    /**
     * Class to build instances of {@link TaskDefinition}.
     */
    public static class Builder {
        private Long code;
        private LocalDateTime createTime;
        private Integer delayTime;
        private String dependence;
        private String description;
        private Long environmentCode;
        private Integer failRetryInterval;
        private Integer failRetryTimes;
        private FlagEnum flag;
        private Integer id;
        private String modifyBy;
        private String name;
        private Long projectCode;
        private String projectName;
        private String resourceIds;
        private Integer taskGroupId;
        private Integer taskGroupPriority;
        private List<Property> taskParamList;
        private Map<String, String> taskParamMap;
        private String taskParams;
        private TaskPriorityEnum taskPriority;
        private String taskType;
        private Integer timeout;
        private TimeoutFlagEnum timeoutFlag;
        private TimeoutNotifyStrategyEnum timeoutNotifyStrategy;
        private LocalDateTime updateTime;
        private Integer userId;
        private String userName;
        private Integer version;
        private String workerGroup;



        /**
         * Setter for code.
         * @param  code  Long value for code.
         * @return Builder
         */
        public Builder code(Long code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for createTime.
         * @param  createTime  LocalDateTime value for createTime.
         * @return Builder
         */
        public Builder createTime(LocalDateTime createTime) {
            this.createTime = createTime;
            return this;
        }

        /**
         * Setter for delayTime.
         * @param  delayTime  Integer value for delayTime.
         * @return Builder
         */
        public Builder delayTime(Integer delayTime) {
            this.delayTime = delayTime;
            return this;
        }

        /**
         * Setter for dependence.
         * @param  dependence  String value for dependence.
         * @return Builder
         */
        public Builder dependence(String dependence) {
            this.dependence = dependence;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for environmentCode.
         * @param  environmentCode  Long value for environmentCode.
         * @return Builder
         */
        public Builder environmentCode(Long environmentCode) {
            this.environmentCode = environmentCode;
            return this;
        }

        /**
         * Setter for failRetryInterval.
         * @param  failRetryInterval  Integer value for failRetryInterval.
         * @return Builder
         */
        public Builder failRetryInterval(Integer failRetryInterval) {
            this.failRetryInterval = failRetryInterval;
            return this;
        }

        /**
         * Setter for failRetryTimes.
         * @param  failRetryTimes  Integer value for failRetryTimes.
         * @return Builder
         */
        public Builder failRetryTimes(Integer failRetryTimes) {
            this.failRetryTimes = failRetryTimes;
            return this;
        }

        /**
         * Setter for flag.
         * @param  flag  FlagEnum value for flag.
         * @return Builder
         */
        public Builder flag(FlagEnum flag) {
            this.flag = flag;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  Integer value for id.
         * @return Builder
         */
        public Builder id(Integer id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for modifyBy.
         * @param  modifyBy  String value for modifyBy.
         * @return Builder
         */
        public Builder modifyBy(String modifyBy) {
            this.modifyBy = modifyBy;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for projectCode.
         * @param  projectCode  Long value for projectCode.
         * @return Builder
         */
        public Builder projectCode(Long projectCode) {
            this.projectCode = projectCode;
            return this;
        }

        /**
         * Setter for projectName.
         * @param  projectName  String value for projectName.
         * @return Builder
         */
        public Builder projectName(String projectName) {
            this.projectName = projectName;
            return this;
        }

        /**
         * Setter for resourceIds.
         * @param  resourceIds  String value for resourceIds.
         * @return Builder
         */
        public Builder resourceIds(String resourceIds) {
            this.resourceIds = resourceIds;
            return this;
        }

        /**
         * Setter for taskGroupId.
         * @param  taskGroupId  Integer value for taskGroupId.
         * @return Builder
         */
        public Builder taskGroupId(Integer taskGroupId) {
            this.taskGroupId = taskGroupId;
            return this;
        }

        /**
         * Setter for taskGroupPriority.
         * @param  taskGroupPriority  Integer value for taskGroupPriority.
         * @return Builder
         */
        public Builder taskGroupPriority(Integer taskGroupPriority) {
            this.taskGroupPriority = taskGroupPriority;
            return this;
        }

        /**
         * Setter for taskParamList.
         * @param  taskParamList  List of Property value for taskParamList.
         * @return Builder
         */
        public Builder taskParamList(List<Property> taskParamList) {
            this.taskParamList = taskParamList;
            return this;
        }

        /**
         * Setter for taskParamMap.
         * @param  taskParamMap  Map of String, value for taskParamMap.
         * @return Builder
         */
        public Builder taskParamMap(Map<String, String> taskParamMap) {
            this.taskParamMap = taskParamMap;
            return this;
        }

        /**
         * Setter for taskParams.
         * @param  taskParams  String value for taskParams.
         * @return Builder
         */
        public Builder taskParams(String taskParams) {
            this.taskParams = taskParams;
            return this;
        }

        /**
         * Setter for taskPriority.
         * @param  taskPriority  TaskPriorityEnum value for taskPriority.
         * @return Builder
         */
        public Builder taskPriority(TaskPriorityEnum taskPriority) {
            this.taskPriority = taskPriority;
            return this;
        }

        /**
         * Setter for taskType.
         * @param  taskType  String value for taskType.
         * @return Builder
         */
        public Builder taskType(String taskType) {
            this.taskType = taskType;
            return this;
        }

        /**
         * Setter for timeout.
         * @param  timeout  Integer value for timeout.
         * @return Builder
         */
        public Builder timeout(Integer timeout) {
            this.timeout = timeout;
            return this;
        }

        /**
         * Setter for timeoutFlag.
         * @param  timeoutFlag  TimeoutFlagEnum value for timeoutFlag.
         * @return Builder
         */
        public Builder timeoutFlag(TimeoutFlagEnum timeoutFlag) {
            this.timeoutFlag = timeoutFlag;
            return this;
        }

        /**
         * Setter for timeoutNotifyStrategy.
         * @param  timeoutNotifyStrategy  TimeoutNotifyStrategyEnum value for timeoutNotifyStrategy.
         * @return Builder
         */
        public Builder timeoutNotifyStrategy(TimeoutNotifyStrategyEnum timeoutNotifyStrategy) {
            this.timeoutNotifyStrategy = timeoutNotifyStrategy;
            return this;
        }

        /**
         * Setter for updateTime.
         * @param  updateTime  LocalDateTime value for updateTime.
         * @return Builder
         */
        public Builder updateTime(LocalDateTime updateTime) {
            this.updateTime = updateTime;
            return this;
        }

        /**
         * Setter for userId.
         * @param  userId  Integer value for userId.
         * @return Builder
         */
        public Builder userId(Integer userId) {
            this.userId = userId;
            return this;
        }

        /**
         * Setter for userName.
         * @param  userName  String value for userName.
         * @return Builder
         */
        public Builder userName(String userName) {
            this.userName = userName;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  Integer value for version.
         * @return Builder
         */
        public Builder version(Integer version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for workerGroup.
         * @param  workerGroup  String value for workerGroup.
         * @return Builder
         */
        public Builder workerGroup(String workerGroup) {
            this.workerGroup = workerGroup;
            return this;
        }

        /**
         * Builds a new {@link TaskDefinition} object using the set fields.
         * @return {@link TaskDefinition}
         */
        public TaskDefinition build() {
            return new TaskDefinition(code, createTime, delayTime, dependence, description,
                    environmentCode, failRetryInterval, failRetryTimes, flag, id, modifyBy, name,
                    projectCode, projectName, resourceIds, taskGroupId, taskGroupPriority,
                    taskParamList, taskParamMap, taskParams, taskPriority, taskType, timeout,
                    timeoutFlag, timeoutNotifyStrategy, updateTime, userId, userName, version,
                    workerGroup);
        }
    }
}
